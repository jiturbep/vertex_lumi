#include "PileupCorrections/FakeCorrection.h"
#include "PileupCorrections/PileupMaskingCorrection.h"
//
// File generated by /cvmfs/atlas.cern.ch/repo/sw/software/x86_64-slc6-gcc47-opt/19.0.3/sw/lcg/app/releases/ROOT/5.34.13/x86_64-slc6-gcc47-opt/root/bin/rootcint at Tue Oct 28 19:29:38 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIobjdIPileupCorrections_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PileupCorrections_Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void FakeCorrection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void FakeCorrection_Dictionary();
   static void delete_FakeCorrection(void *p);
   static void deleteArray_FakeCorrection(void *p);
   static void destruct_FakeCorrection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FakeCorrection*)
   {
      ::FakeCorrection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::FakeCorrection),0);
      static ::ROOT::TGenericClassInfo 
         instance("FakeCorrection", "../PileupCorrections/FakeCorrection.h", 53,
                  typeid(::FakeCorrection), DefineBehavior(ptr, ptr),
                  0, &FakeCorrection_Dictionary, isa_proxy, 0,
                  sizeof(::FakeCorrection) );
      instance.SetDelete(&delete_FakeCorrection);
      instance.SetDeleteArray(&deleteArray_FakeCorrection);
      instance.SetDestructor(&destruct_FakeCorrection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FakeCorrection*)
   {
      return GenerateInitInstanceLocal((::FakeCorrection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FakeCorrection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void FakeCorrection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::FakeCorrection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void PileupMaskingCorrection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void PileupMaskingCorrection_Dictionary();
   static void delete_PileupMaskingCorrection(void *p);
   static void deleteArray_PileupMaskingCorrection(void *p);
   static void destruct_PileupMaskingCorrection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PileupMaskingCorrection*)
   {
      ::PileupMaskingCorrection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::PileupMaskingCorrection),0);
      static ::ROOT::TGenericClassInfo 
         instance("PileupMaskingCorrection", "../PileupCorrections/PileupMaskingCorrection.h", 59,
                  typeid(::PileupMaskingCorrection), DefineBehavior(ptr, ptr),
                  0, &PileupMaskingCorrection_Dictionary, isa_proxy, 0,
                  sizeof(::PileupMaskingCorrection) );
      instance.SetDelete(&delete_PileupMaskingCorrection);
      instance.SetDeleteArray(&deleteArray_PileupMaskingCorrection);
      instance.SetDestructor(&destruct_PileupMaskingCorrection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PileupMaskingCorrection*)
   {
      return GenerateInitInstanceLocal((::PileupMaskingCorrection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PileupMaskingCorrection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void PileupMaskingCorrection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::PileupMaskingCorrection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FakeCorrection(void *p) {
      delete ((::FakeCorrection*)p);
   }
   static void deleteArray_FakeCorrection(void *p) {
      delete [] ((::FakeCorrection*)p);
   }
   static void destruct_FakeCorrection(void *p) {
      typedef ::FakeCorrection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FakeCorrection

namespace ROOT {
   // Wrapper around operator delete
   static void delete_PileupMaskingCorrection(void *p) {
      delete ((::PileupMaskingCorrection*)p);
   }
   static void deleteArray_PileupMaskingCorrection(void *p) {
      delete [] ((::PileupMaskingCorrection*)p);
   }
   static void destruct_PileupMaskingCorrection(void *p) {
      typedef ::PileupMaskingCorrection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PileupMaskingCorrection

/********************************************************
* ../obj/PileupCorrections_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablePileupCorrections_Dict();

extern "C" void G__set_cpp_environmentPileupCorrections_Dict() {
  G__cpp_reset_tagtablePileupCorrections_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevPileupCorrections_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FakeCorrection */
static int G__PileupCorrections_Dict_788_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FakeCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FakeCorrection(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) FakeCorrection(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetFakeFractionFromMuReconMC((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetFakeMuFromMuReconMC((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetFakeMuUncertaintyFromMuReconMC((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetFakeMuHighFromMuReconMC((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetFakeMuLowFromMuReconMC((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetMuFakeFromMuReconNEvt((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FakeCorrection*) G__getstructoffset())->GetMuFakeUncertaintyFromMuReconNEvt((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FakeCorrection*) G__getstructoffset())->GetFakeCorrectionTGraph());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FakeCorrection*) G__getstructoffset())->SetMuScale((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_788_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FakeCorrection*) G__getstructoffset())->SetMuScaleUncertainty((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PileupCorrections_Dict_788_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FakeCorrection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FakeCorrection(*(FakeCorrection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FakeCorrection G__TFakeCorrection;
static int G__PileupCorrections_Dict_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FakeCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FakeCorrection*) (soff+(sizeof(FakeCorrection)*i)))->~G__TFakeCorrection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FakeCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FakeCorrection*) (soff))->~G__TFakeCorrection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PileupCorrections_Dict_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FakeCorrection* dest = (FakeCorrection*) G__getstructoffset();
   *dest = *(FakeCorrection*) libp->para[0].ref;
   const FakeCorrection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PileupMaskingCorrection */
static int G__PileupCorrections_Dict_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PileupMaskingCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PileupMaskingCorrection((TH1D*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) PileupMaskingCorrection((TH1D*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PileupMaskingCorrection((TH1D*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) PileupMaskingCorrection((TH1D*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PileupMaskingCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PileupMaskingCorrection(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) PileupMaskingCorrection(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PileupMaskingCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PileupMaskingCorrection(
*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) PileupMaskingCorrection(
*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((PileupMaskingCorrection*) G__getstructoffset())->GenerateDzDistribution((TH1D*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((PileupMaskingCorrection*) G__getstructoffset())->GenerateDzDistribution((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->LoadDzDistribution((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->GenerateNewPmask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->FitExcluded();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->FitExcludedResiduals();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->MakeFullGaussian();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->MakeDifferentialPmask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->LoadCorrection((TGraphErrors*) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->GenerateCorrection((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->CalculateTotalPmask((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->MakePuCorrTGraphs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->GetCorrectionFactor((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->GetCorrectionFactorHigh((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->GetCorrectionFactorLow((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->GetGaussianSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PileupMaskingCorrection*) G__getstructoffset())->GetExpectedDzDistribution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PileupMaskingCorrection*) G__getstructoffset())->GetExcludedDzFitFunc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PileupMaskingCorrection*) G__getstructoffset())->GetFullDzFitFunc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PileupMaskingCorrection*) G__getstructoffset())->GetDifferentialPmask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->GetTotalPmask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->GetTotalPmaskError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PileupMaskingCorrection*) G__getstructoffset())->GetMuMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PileupMaskingCorrection*) G__getstructoffset())->GetMuCorrection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((PileupMaskingCorrection*) G__getstructoffset())->Save(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PileupMaskingCorrection*) G__getstructoffset())->Save(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((PileupMaskingCorrection*) G__getstructoffset())->Save(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((PileupMaskingCorrection*) G__getstructoffset())->Save();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->SaveDebugHistograms(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PileupMaskingCorrection*) G__getstructoffset())->SetPmaskScale((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->fitFunc_gaussian((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->fitFunc_gaussian_exclude((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->fitFunc_generic((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->fitFunc_generic_exclude((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->meanNObs((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PileupCorrections_Dict_789_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PileupMaskingCorrection*) G__getstructoffset())->meanMuObs((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PileupCorrections_Dict_789_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PileupMaskingCorrection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PileupMaskingCorrection(*(PileupMaskingCorrection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PileupMaskingCorrection G__TPileupMaskingCorrection;
static int G__PileupCorrections_Dict_789_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PileupMaskingCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PileupMaskingCorrection*) (soff+(sizeof(PileupMaskingCorrection)*i)))->~G__TPileupMaskingCorrection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PileupMaskingCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PileupMaskingCorrection*) (soff))->~G__TPileupMaskingCorrection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PileupCorrections_Dict_789_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PileupMaskingCorrection* dest = (PileupMaskingCorrection*) G__getstructoffset();
   *dest = *(PileupMaskingCorrection*) libp->para[0].ref;
   const PileupMaskingCorrection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FakeCorrection */

/* PileupMaskingCorrection */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPileupCorrections_Dict {
 public:
  G__Sizep2memfuncPileupCorrections_Dict(): p(&G__Sizep2memfuncPileupCorrections_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPileupCorrections_Dict::*p)();
};

size_t G__get_sizep2memfuncPileupCorrections_Dict()
{
  G__Sizep2memfuncPileupCorrections_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePileupCorrections_Dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePileupCorrections_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::pair<double,double> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double>,less<unsigned int> >",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FakeCorrection */
static void G__setup_memvarFakeCorrection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection));
   { FakeCorrection *p; p=(FakeCorrection*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TString),-1,-1,1,"tag=",0,"Tag attached to the name of objects in the cache root file");
   G__memvar_setup((void*)((long)(&p->tg_fakefraction_MuReconMC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors),-1,-1,1,"tg_fakefraction_MuReconMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tg_fakemu_MuReconMC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors),-1,-1,1,"tg_fakemu_MuReconMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tg_evt_mufake_murecon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors),-1,-1,1,"tg_evt_mufake_murecon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tg_nevt_mu_real_vs_mu_recon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors),-1,-1,1,"tg_nevt_mu_real_vs_mu_recon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_GlobalSettings),-1,-1,1,"gs=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_scale=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_scale_uncertainty=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PileupMaskingCorrection */
static void G__setup_memvarPileupMaskingCorrection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection));
   { PileupMaskingCorrection *p; p=(PileupMaskingCorrection*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->h_dz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"h_dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_dz_rebinned)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"h_dz_rebinned=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_dz_random)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"h_dz_random=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_dz_expected)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"h_dz_expected=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f_dz_excluded)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TF1),-1,-1,1,"f_dz_excluded=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f_dz_full)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TF1),-1,-1,1,"f_dz_full=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f_dz_full_normalized)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TF1),-1,-1,1,"f_dz_full_normalized=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_dz_rebinned_residuals)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"h_dz_rebinned_residuals=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_pmask_dz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"h_pmask_dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmask)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmask=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tg_pmask_cumulative)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraph),-1,-1,1,"tg_pmask_cumulative=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmask_err)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmask_err=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tg_mu_obs_vs_mu_actual)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors),-1,-1,1,"tg_mu_obs_vs_mu_actual=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tg_pileup_correction)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors),-1,-1,1,"tg_pileup_correction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TString),-1,-1,1,"tag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rebin_factor)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"rebin_factor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exclude_dz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"exclude_dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->low_stats)-(long)(p)),103,0,0,-1,-1,-1,1,"low_stats=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->max_dz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"max_dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->do_ll)-(long)(p)),103,0,0,-1,-1,-1,1,"do_ll=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->redo_cache)-(long)(p)),103,0,0,-1,-1,-1,1,"redo_cache=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxNGenInt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MaxNGenInt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmask_available)-(long)(p)),103,0,0,-1,-1,-1,1,"pmask_available=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz_template)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D),-1,-1,1,"dz_template=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->reject)-(long)(p)),103,0,0,-1,-1,-1,1,"reject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->is_MC)-(long)(p)),103,0,0,-1,-1,-1,1,"is_MC=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"finished=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pmask_scale=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPileupCorrections_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFakeCorrection(void) {
   /* FakeCorrection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection));
   G__memfunc_setup("FakeCorrection",1423,G__PileupCorrections_Dict_788_0_1, 105, G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - p_tag i - 'Int_t' 0 - p_ntrkcut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFakeFractionFromMuReconMC",2730,G__PileupCorrections_Dict_788_0_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFakeMuFromMuReconMC",2102,G__PileupCorrections_Dict_788_0_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFakeMuUncertaintyFromMuReconMC",3276,G__PileupCorrections_Dict_788_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", "Return statistical uncertainty", (void*) NULL, 0);
   G__memfunc_setup("GetFakeMuHighFromMuReconMC",2486,G__PileupCorrections_Dict_788_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFakeMuLowFromMuReconMC",2408,G__PileupCorrections_Dict_788_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuFakeFromMuReconNEvt",2339,G__PileupCorrections_Dict_788_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuFakeUncertaintyFromMuReconNEvt",3513,G__PileupCorrections_Dict_788_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFakeCorrectionTGraph",2293,G__PileupCorrections_Dict_788_0_9, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuScale",982,G__PileupCorrections_Dict_788_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - p_mu_scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuScaleUncertainty",2156,G__PileupCorrections_Dict_788_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - p_mu_scale_uncertainty", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTH1ToTGraph",1719,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraph), -1, 0, 1, 1, 4, 0, "U 'TH1D' - 0 - h_in", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FakeCorrection", 1423, G__PileupCorrections_Dict_788_0_13, (int) ('i'), G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection), -1, 0, 1, 1, 1, 0, "u 'FakeCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FakeCorrection", 1549, G__PileupCorrections_Dict_788_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PileupCorrections_Dict_788_0_15, (int) ('u'), G__get_linked_tagnum(&G__PileupCorrections_DictLN_FakeCorrection), -1, 1, 1, 1, 1, 0, "u 'FakeCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPileupMaskingCorrection(void) {
   /* PileupMaskingCorrection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection));
   G__memfunc_setup("PileupMaskingCorrection",2385,G__PileupCorrections_Dict_789_0_1, 105, G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection), -1, 0, 2, 1, 1, 0, 
"U 'TH1D' - 0 - h1 u 'TString' - 0 '\"\"' string1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PileupMaskingCorrection",2385,G__PileupCorrections_Dict_789_0_2, 105, G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - p_tag i - 'Int_t' 0 - p_ntrkcut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PileupMaskingCorrection",2385,G__PileupCorrections_Dict_789_0_3, 105, G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - p_tag i - 'Int_t' 0 - p_ntrkcut "
"i - 'Int_t' 0 - bcid g - - 0 - vdmscan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateDzDistribution",2281,G__PileupCorrections_Dict_789_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1D' - 0 - h_z u 'TString' - 0 '\"\"' tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDzDistribution",1854,G__PileupCorrections_Dict_789_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - h_dz_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateNewPmask",1617,G__PileupCorrections_Dict_789_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitExcluded",1105,G__PileupCorrections_Dict_789_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitExcludedResiduals",2045,G__PileupCorrections_Dict_789_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeFullGaussian",1612,G__PileupCorrections_Dict_789_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDifferentialPmask",2119,G__PileupCorrections_Dict_789_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadCorrection",1432,G__PileupCorrections_Dict_789_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphErrors' - 0 - tg1 U 'TGraphErrors' - 0 - tg2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateCorrection",1859,G__PileupCorrections_Dict_789_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - h_dz_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateTotalPmask",1934,G__PileupCorrections_Dict_789_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - h_dz_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePuCorrTGraphs",1682,G__PileupCorrections_Dict_789_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectionFactor",1943,G__PileupCorrections_Dict_789_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mu_in", "Main function to get the correction.", (void*) NULL, 0);
   G__memfunc_setup("GetCorrectionFactorHigh",2327,G__PileupCorrections_Dict_789_0_16, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mu_in d - 'Double_t' 0 - mu_in_err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectionFactorLow",2249,G__PileupCorrections_Dict_789_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mu_in d - 'Double_t' 0 - mu_in_err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussianSigma",1612,G__PileupCorrections_Dict_789_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExpectedDzDistribution",2576,G__PileupCorrections_Dict_789_0_19, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExcludedDzFitFunc",1979,G__PileupCorrections_Dict_789_0_20, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullDzFitFunc",1568,G__PileupCorrections_Dict_789_0_21, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDifferentialPmask",2025,G__PileupCorrections_Dict_789_0_22, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalPmask",1312,G__PileupCorrections_Dict_789_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalPmaskError",1834,G__PileupCorrections_Dict_789_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuMap",768,G__PileupCorrections_Dict_789_0_25, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuCorrection",1530,G__PileupCorrections_Dict_789_0_26, 85, G__get_linked_tagnum(&G__PileupCorrections_DictLN_TGraphErrors), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save",399,G__PileupCorrections_Dict_789_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 '\"include/pmask_cache.root\"' path_rootfile u 'TString' - 0 '\"\"' suffix "
"g - - 0 'true' new_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveDebugHistograms",1943,G__PileupCorrections_Dict_789_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - path_rootfile u 'TString' - 0 - p_suffix "
"g - - 0 - new_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPmaskScale",1296,G__PileupCorrections_Dict_789_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - p_pmask_scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitFunc_gaussian",1673,G__PileupCorrections_Dict_789_0_30, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitFunc_gaussian_exclude",2514,G__PileupCorrections_Dict_789_0_31, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitFunc_generic",1547,G__PileupCorrections_Dict_789_0_32, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitFunc_generic_exclude",2388,G__PileupCorrections_Dict_789_0_33, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("meanNObs",787,G__PileupCorrections_Dict_789_0_34, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - p_mask d - 'Double_t' 0 - n_gen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("meanMuObs",903,G__PileupCorrections_Dict_789_0_35, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mu_actual d - 'Double_t' 0 - p_mask", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PileupMaskingCorrection", 2385, G__PileupCorrections_Dict_789_0_36, (int) ('i'), 
G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection), -1, 0, 1, 1, 1, 0, "u 'PileupMaskingCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PileupMaskingCorrection", 2511, G__PileupCorrections_Dict_789_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PileupCorrections_Dict_789_0_38, (int) ('u'), G__get_linked_tagnum(&G__PileupCorrections_DictLN_PileupMaskingCorrection), -1, 1, 1, 1, 1, 0, "u 'PileupMaskingCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPileupCorrections_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPileupCorrections_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPileupCorrections_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PileupCorrections_DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR = { "map<unsigned int,pair<double,double>,less<unsigned int>,allocator<pair<const unsigned int,pair<double,double> > > >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_GlobalSettings = { "GlobalSettings" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_FakeCorrection = { "FakeCorrection" , 99 , -1 };
G__linked_taginfo G__PileupCorrections_DictLN_PileupMaskingCorrection = { "PileupMaskingCorrection" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePileupCorrections_Dict() {
  G__PileupCorrections_DictLN_TString.tagnum = -1 ;
  G__PileupCorrections_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TF1.tagnum = -1 ;
  G__PileupCorrections_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TH1D.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TGraph.tagnum = -1 ;
  G__PileupCorrections_DictLN_TGraphErrors.tagnum = -1 ;
  G__PileupCorrections_DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__PileupCorrections_DictLN_GlobalSettings.tagnum = -1 ;
  G__PileupCorrections_DictLN_FakeCorrection.tagnum = -1 ;
  G__PileupCorrections_DictLN_PileupMaskingCorrection.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePileupCorrections_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TString);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TF1);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_GlobalSettings);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_FakeCorrection),sizeof(FakeCorrection),-1,32768,(char*)NULL,G__setup_memvarFakeCorrection,G__setup_memfuncFakeCorrection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PileupCorrections_DictLN_PileupMaskingCorrection),sizeof(PileupMaskingCorrection),-1,33792,(char*)NULL,G__setup_memvarPileupMaskingCorrection,G__setup_memfuncPileupMaskingCorrection);
}
extern "C" void G__cpp_setupPileupCorrections_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPileupCorrections_Dict()");
  G__set_cpp_environmentPileupCorrections_Dict();
  G__cpp_setup_tagtablePileupCorrections_Dict();

  G__cpp_setup_inheritancePileupCorrections_Dict();

  G__cpp_setup_typetablePileupCorrections_Dict();

  G__cpp_setup_memvarPileupCorrections_Dict();

  G__cpp_setup_memfuncPileupCorrections_Dict();
  G__cpp_setup_globalPileupCorrections_Dict();
  G__cpp_setup_funcPileupCorrections_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPileupCorrections_Dict();
  return;
}
class G__cpp_setup_initPileupCorrections_Dict {
  public:
    G__cpp_setup_initPileupCorrections_Dict() { G__add_setup_func("PileupCorrections_Dict",(G__incsetup)(&G__cpp_setupPileupCorrections_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPileupCorrections_Dict() { G__remove_setup_func("PileupCorrections_Dict"); }
};
G__cpp_setup_initPileupCorrections_Dict G__cpp_setup_initializerPileupCorrections_Dict;

